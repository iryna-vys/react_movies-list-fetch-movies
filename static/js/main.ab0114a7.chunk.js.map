{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAdd","useState","query","setQuery","setMovie","notFound","setNotFound","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","fetch","then","response","json","result","Response","Title","Plot","Poster","imdbID","App","state","data","addMovie","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2yEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,uBCF3BG,G,MAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,MAAnC,mBAAOL,EAAP,KAAcQ,EAAd,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEA,OACE,oCACE,0BACEjB,UAAU,aACVkB,SAAU,SAACC,GACTA,EAAMC,iBACNT,EAAMJ,GACNO,EAAS,IACTC,EAAS,QAGX,yBAAKf,UAAU,SACb,2BAAOA,UAAU,QAAQqB,QAAQ,eAAjC,eAIA,yBAAKrB,UAAU,WACb,2BACEsB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxB,UAAWyB,IAAW,QAAS,CAC7B,YAAaT,IAEfU,MAAOb,EACPc,SAAU,SAACR,GACTL,EAASK,EAAMS,OAAOF,OACtBT,GAAY,OAKjBD,GACC,uBAAGhB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEsB,KAAK,SACLtB,UAAU,kBACV6B,QAAS,WCxDC,IAAAjC,KDyDCiB,ECxDvBiB,MAAM,GAAD,OAHM,+CAGN,OAAclC,IAChBmC,MAAK,SAAAC,GAAQ,OACZA,EAASC,WDuDIF,MAAK,SAACG,GACL,GAAwB,UAApBA,EAAOC,SAAX,CAMA,IACSvC,EAILsC,EAJFE,MACMvC,EAGJqC,EAHFG,KACQvC,EAENoC,EAFFI,OACQ7B,EACNyB,EADFK,OAGIxC,EAAO,qCAAiCU,GAE9CM,EAAS,CACPnB,QACAC,cACAC,SACAC,UACAU,gBAnBAQ,GAAY,QAPtB,iBAmCF,yBAAKjB,UAAU,WACb,4BACEsB,KAAK,SACLtB,UAAU,qBAFZ,sBAUN,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GACC,kBAAC,EAAcA,O,OElGZiC,EAAb,4MACEC,MAAQ,CACNpC,OAAQqC,GAFZ,EAKEC,SAAW,SAACpC,GACN,EAAKkC,MAAMpC,OAAOuC,MAAK,qBAAGnC,SAAwBF,EAAME,WAI5D,EAAKoC,UAAS,SAAAJ,GAAK,MAAK,CACtBpC,OAAO,GAAD,mBAAMoC,EAAMpC,QAAZ,CAAoBE,SAXhC,4CAeE,WACE,IAAQF,EAAWyC,KAAKL,MAAhBpC,OAER,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,MAAOmC,KAAKH,iBAxBjC,GAAyBI,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ab0114a7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onAdd(movie);\n          setQuery('');\n          setMovie(null);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': notFound,\n              })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setNotFound(false);\n              }}\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                getMovie(query)\n                  .then((result) => {\n                    if (result.Response === 'False') {\n                      setNotFound(true);\n\n                      return;\n                    }\n\n                    const {\n                      Title: title,\n                      Plot: description,\n                      Poster: imgUrl,\n                      imdbID: imdbId,\n                    } = result;\n\n                    const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n                    setMovie({\n                      title,\n                      description,\n                      imgUrl,\n                      imdbUrl,\n                      imdbId,\n                    });\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","const API_URL = `https://www.omdbapi.com/?apikey=7df4c501&t=`;\n\nexport const getMovie = title => (\n  fetch(`${API_URL}${title}`)\n    .then(response => (\n      response.json()\n    ))\n);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (this.state.movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}